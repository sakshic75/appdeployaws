AWSTemplateFormatVersion: '2010-09-09'
Resources:
  RDSInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: 20
      BackupRetentionPeriod: 7
      DBInstanceClass: db.t2.micro
      Engine: mysql
      EngineVersion: 5.7
      MasterUsername: admin
      MasterUserPassword: Password123
      VPCSecurityGroups: 
        - !Ref DBSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: true
      EnableIAMDatabaseAuthentication: true

  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS MySQL
      SubnetIds:
         - subnet-c7133c8e 
         - subnet-01ddef66  # Replace with your subnet IDs

  DBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: RDS MySQL security group
      SecurityGroupIngress:
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0


  RDSInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: RDSInstanceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: rds.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: RDSInstancePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'secretsmanager:GetSecretValue'
                Resource: !Ref SecretsManagerSecret

  SecretsManagerSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: MyDBSecret
      Description: Secret for RDS MySQL credentials
      SecretString: '{"username": "admin", "password": "Password123"}'
Outputs:
  RDSInstanceEndpoint:
    Value: !GetAtt RDSInstance.Endpoint.Address
    Description: RDS MySQL instance endpoint