AWSTemplateFormatVersion: '2010-09-09'
Parameters :
  Port :
    Type: Number
    Description: The Port for load balancer
    Default: 80
  VPC:
    Type: String
    Description: The VPC to create the cluster
    Default: vpc-5cc68c3b

  PrivateSubnet01:
    Type: String
    Description: The subnet for the DB cluster
    Default:  subnet-c7133c8e 


  PrivateSubnet02:
    Type: String
    Description: The subnet for the DB cluster
    Default: subnet-01ddef66

  MasterUsername:
    Type: String
    Description: The username for our database.
  
  MasterUserPassword:
    Type: String
    Description: The password for the database.
    "NoEcho": true
Resources:
  RDSServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: RDS-Service-Role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - rds.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: RDS-Service-Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'rds:CreateDBInstance'
                  - 'rds:ModifyDBInstance'
                  - 'rds:DeleteDBInstance'
                  - 'rds:DescribeDBInstances'
                Resource: '*'
  RDSInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: 100
      BackupRetentionPeriod: 7
      LicenseModel: license-included
      Engine: sqlserver-se
      EngineVersion: 15.00.4312.2.v1
      DBInstanceClass: db.m5.large
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      MultiAZ: false
      PubliclyAccessible: true
      StorageType: gp2
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
    Metadata:
      'AWS::CloudFormation::Init':
        config:
          commands:
            01_associate_role:
              command: aws rds add-role-to-db-instance --db-instance-identifier !Ref RDSInstance --role-arn !Ref RDSServiceRole
              env:
                AWS_DEFAULT_REGION: !Ref 'AWS::Region'


  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS SQL Server
      SubnetIds:
        - !Ref PrivateSubnet01
        - !Ref PrivateSubnet02 # Replace with your subnet IDs

  DBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: RDS SQL Server security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC  # Replace with your VPC ID
  # MyTargetGroup:
  #   Type: AWS::ElasticLoadBalancingV2::TargetGroup
  #   Properties:
  #     Name: MyTargetGroup
  #     Port: !Ref Port
  #     Protocol: HTTP
  #     TargetType: instance
  #     VpcId: !Ref VPC
  #     HealthCheckEnabled: true
  #     HealthCheckIntervalSeconds: 30
  #     HealthCheckPath: /
  #     HealthCheckProtocol: HTTP
  #     HealthCheckTimeoutSeconds: 5
  #     HealthyThresholdCount: 2
  #     UnhealthyThresholdCount: 2

  # MyLoadBalancer:
  #   Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  #   Properties:
  #     Name: MyLoadBalancer
  #     Subnets:
  #       - !Ref PrivateSubnet01
  #       - !Ref PrivateSubnet02
  #     SecurityGroups:
  #       - sg-c60524be
  #     Type: application
  #     IpAddressType: ipv4
  #     Scheme: internet-facing
  #     LoadBalancerAttributes:
  #       - Key: idle_timeout.timeout_seconds
  #         Value: '60'
  #     Tags:
  #       - Key: Name
  #         Value: MyLoadBalancer
  #   DependsOn: MyTargetGroup

  # MyListener:
  #   Type: AWS::ElasticLoadBalancingV2::Listener
  #   Properties:
  #     LoadBalancerArn: !Ref MyLoadBalancer
  #     Port: !Ref Port
  #     Protocol: HTTP
  #     DefaultActions:
  #       - Type: forward
  #         TargetGroupArn: !Ref MyTargetGroup
Outputs:
   SQLDatabaseEndpoint:
     Description: Database endpoint
     Value: !Sub "${RDSInstance.Endpoint.Address}:${RDSInstance.Endpoint.Port}"
  
