version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    on-failure: ABORT
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build --build-arg PORT='3000' --tag $AWS_IMAGE_DEMO_APP:$AWS_IMAGE_TAG demoapp/.
      - docker build --tag $AWS_IMAGE_MSSQL:$AWS_IMAGE_TAG data/sql/.
      - ./build-docker-compose.sh
      - mkdir reports
      - docker compose -f docker-compose-cicd.yml run test
      - docker tag $AWS_IMAGE_DEMO_APP:$AWS_IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$AWS_IMAGE_DEMO_APP:$AWS_IMAGE_TAG
      - docker tag $AWS_IMAGE_MSSQL:$AWS_IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$AWS_IMAGE_MSSQL:$AWS_IMAGE_TAG

  post_build:
    on-failure: ABORT
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...

      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$AWS_IMAGE_DEMO_APP:$AWS_IMAGE_TAG

      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$AWS_IMAGE_MSSQL:$AWS_IMAGE_TAG

      - sed -i 's|<APP_NAME>|'$AWS_IMAGE_DEMO_APP'|g' taskdef.json

      - sed -i 's|<DB_NAME>|'$AWS_IMAGE_MSSQL'|g' taskdef.json

      - sed -i 's|<AWS_ACCOUNT_ID>|'$AWS_ACCOUNT_ID'|g' taskdef.json

      - sed -i 's|<IMAGE_NAME>|'$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$AWS_IMAGE_DEMO_APP'\:'$AWS_IMAGE_TAG'|g' taskdef.json

      - sed -i 's|<IMAGE_DB_NAME>|'$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$AWS_IMAGE_MSSQL'\:'$AWS_IMAGE_TAG'|g' taskdef.json

      - sed -i 's|<IAM_EXEC_ROLE>|'$IAM_EXEC_ROLE'|g' taskdef.json

      - sed -i 's|<REGION>|'$AWS_DEFAULT_REGION'|g' taskdef.json
      - aws ecs register-task-definition --cli-input-json file://taskdef.json
      - aws ecs create-service --service-name my-service --cli-input-json file://create-service.json
reports:
  new-report-group: #demoapp playwright
    files: "test-results.xml"
    base-directory: "./reports"
# artifacts:
#   files: "**.*"
#   base-directory: "./reports"
#   name: builds/$CODEBUILD_BUILD_NUMBER/my-artifacts
artifacts:
      files: 
          - taskdef.json
          - imageDetail.json
          - appspec.yaml
